//
//   Copyright 2016  Cityzen Data
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

'READTOKEN'
'token' STORE

//
// Load data from Riak-ts
//

'192.168.99.101'            // URL
8087                        // PORT
{                           // Colums map
    'timestamp' 2           // Timestamp key correspond to 3rd column
    'class'                 // Class key
    {
        4 'avgSpeed'        // Load 4th Column: avg speed
        6 'vehicleCount'    // Load 6th Column: vehicle Count
    }
    'labels'                // Labels key 
    {
        8 'report_id'       // 8th column: report id
        1 'ext_id'          // 1th column: ext_id
    }
}

//
// Some extid simple
// extid= 678, d= 1.450 ; extid= 624 , d= 0.516 ; extid= 1053, d= 2.061
//

'select *  from aarhus2 where ts > 1392249600000 and ts < 1397260800000 and status=%27OK%27 and extid=%27678%27'
'io.warp10.riakts.LOADFROMRIAK' UDF
'gtsSample' STORE
1.450 'distance' STORE
$token
AUTHENTICATE

//
// Raise the maxOps limit
//

1000000000
MAXOPS

//
// Apply macro to generate density and flow GTS from data set and distance
//

$distance
$gtsSample
@generateDensityFlow
'gtsFlow' STORE
'gtsDensity' STORE

//
// Then call compute traffic with compute a GTS score and a 20 minutes bucketised GTS count from the density and flow GTS and a score limit
//

$gtsDensity
$gtsFlow
0.0
@computeTraffic
SWAP 
'gtsScoreCurId' STORE

//
// Generate a weekly values map, a value correspond to a percentage of times when a road is busy during 20 minutes
// 

@computeWeekMap
'mapDays' STORE

//
// Visualization map global
//

{
    'gts'
    $mapDays VALUELIST  
    'params'
    [
        { 'key' 'Monday' }
        { 'key' 'Tuesday' }
        { 'key' 'Wednesday' }
        { 'key' 'Thurday' }
        { 'key' 'Friday' }
        { 'color' '#ff1010' 'key' 'Saturday' }
        { 'color' '#ff1010' 'key' 'Sunday' }
    ]
    'globalParams'
    { 'interpolate' 'linear' 'dateFormat' '%25H:%25M' }
}
'map' STORE

//
// Visualization Wednesday and Friday
//
{
    'gts'
    [ 
        $gtsWeekMap VALUELIST 2 GET 
        $gtsWeekMap VALUELIST 1 GET 
    ]
    'params'
    [
        { 'key' 'Wednesday' }
        { 'key' 'Tuesday' }
    ]
    'globalParams'
    { 'interpolate' 'step-after' 'dateFormat' '%25H:%25M' }
}
'mapFridayWes' STORE


{
    'visuMapId'
    [ $map ]
    'visuMap2days'
    [ $mapFridayWes ]
    'gtsDensityId'
    $gtsDensity WRAP
    'gtsScoreId'
    $gtsScoreCurId 0 GET
}
