//
//   Copyright 2016  Cityzen Data
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

<%
    'gtsSample' STORE
    'distance' STORE
    
    //
    // Get The GTS vehicleCount
    //
    
    [ 
        $gtsSample       
        []                        
        'vehicleCount'       
        filter.byclass            
    ] FILTER
    
    'gtsN' STORE
    
    //
    // Compute the GTS density (Multplicate Nb car by  thedistance between both points)
    //
    
    [
      [ $gtsN  mapper.todouble 0 0 0 ] MAP
      1 $distance / mapper.mul 0 0 0  
    ] MAP
    'gtsDensity' STORE
    
    //
    // Load GTS average Speed
    //
    
    [ 
        $gtsSample          
        []                        
        'avgSpeed'       
        filter.byclass            
    ] FILTER
    'gtsAvgSpeed' STORE
    
    //
    // Compute harmonic mean 
    //
    
    [
      [ $gtsAvgSpeed mapper.todouble 0 0 0 ] MAP
      1 1.02 / mapper.mul 0 0 0  
    ] MAP
    'gtsAvgSpeed'  STORE
     
    //
    // Compute Flow
    //
    
    [
      $gtsDensity
      $gtsAvgSpeed
      [ 'ext_id' ] 
      op.mul
    ]
    APPLY
    'gtsFlow' STORE
    
    //
    // Round at 0.01
    //
    
    <%
      'mapping_window' STORE    //  Storing macro input information 
    
      $mapping_window 0 GET         // Tick
      $mapping_window 4 GET 0 GET   // Latitude
      $mapping_window 5 GET 0 GET   // Longitude
      $mapping_window 6 GET 0 GET   // Elevation
      $mapping_window 7 GET 0 GET   // Value
      100 *
      ROUND
      TODOUBLE
      100 /
    %> 'roundMill' STORE
    
    //
    // Round each value of gts flow to 0.01
    //
    
    [
        $gtsFlow
        $roundMill
        MACROMAPPER
        0 0 0
    ]
    MAP
    'gtsFlow' STORE
     
    //
    // Round each value of gts flow to 0.01
    //
    
    [
        $gtsDensity 
        $roundMill
        MACROMAPPER
        0 0 0
    ]
    MAP
    'gtsDensity' STORE
$gtsDensity 
$gtsFlow 
%>




